; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyAppName "PDFPass"
#define MyAppVersion "1"
#define MyAppPublisher "Ryan Griggs"
#define MyAppURL "https://PDFPass.net"
#define MyAppExeName "PDFPass.exe"

[Setup]
; NOTE: The value of AppId uniquely identifies this application. Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{D27D4A17-D4AB-4DAA-B655-79C473EE7E58}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
;AppVerName={#MyAppName} {#MyAppVersion}
AppPublisher={#MyAppPublisher}
AppPublisherURL={#MyAppURL}
AppSupportURL={#MyAppURL}
AppUpdatesURL={#MyAppURL}
DefaultDirName={autopf}\{#MyAppName}
DisableProgramGroupPage=yes
LicenseFile=C:\temp\PDFPass1\PDFPass\agpl.txt
; Remove the following line to run in administrative install mode (install for all users.)
PrivilegesRequired=lowest
PrivilegesRequiredOverridesAllowed=dialog
OutputBaseFilename=PDFPass_Setup
SetupIconFile=D:\My Documents\Programming\PDFPass\logo2.ico
UninstallDisplayIcon={app}\PDFPass.exe
UninstallDisplayName=PDFPass V1
Compression=lzma
SolidCompression=yes
WizardStyle=modern

[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl"

[Tasks]
Name: "desktopicon"; Description: "{cm:CreateDesktopIcon}"; GroupDescription: "{cm:AdditionalIcons}"; Flags: unchecked

[Files]
Source: "c:\temp\PDFPass1\dotnet4.7.2.exe"; DestDir: "{tmp}"; Flags: deleteafterinstall; Check: IsDotNetMissing
Source: "C:\temp\PDFPass1\PDFPass\bin\Release\{#MyAppExeName}"; DestDir: "{app}"; Flags: ignoreversion
Source: "C:\temp\PDFPass1\PDFPass\bin\Release\BouncyCastle.Crypto.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "C:\temp\PDFPass1\PDFPass\bin\Release\BouncyCastle.Crypto.xml"; DestDir: "{app}"; Flags: ignoreversion
Source: "C:\temp\PDFPass1\PDFPass\bin\Release\CommandLine.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "C:\temp\PDFPass1\PDFPass\bin\Release\CommandLine.xml"; DestDir: "{app}"; Flags: ignoreversion
Source: "C:\temp\PDFPass1\PDFPass\bin\Release\Common.Logging.Core.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "C:\temp\PDFPass1\PDFPass\bin\Release\Common.Logging.Core.pdb"; DestDir: "{app}"; Flags: ignoreversion
Source: "C:\temp\PDFPass1\PDFPass\bin\Release\Common.Logging.Core.xml"; DestDir: "{app}"; Flags: ignoreversion
Source: "C:\temp\PDFPass1\PDFPass\bin\Release\Common.Logging.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "C:\temp\PDFPass1\PDFPass\bin\Release\Common.Logging.pdb"; DestDir: "{app}"; Flags: ignoreversion
Source: "C:\temp\PDFPass1\PDFPass\bin\Release\Common.Logging.xml"; DestDir: "{app}"; Flags: ignoreversion
Source: "C:\temp\PDFPass1\PDFPass\bin\Release\itext.barcodes.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "C:\temp\PDFPass1\PDFPass\bin\Release\itext.barcodes.xml"; DestDir: "{app}"; Flags: ignoreversion
Source: "C:\temp\PDFPass1\PDFPass\bin\Release\itext.forms.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "C:\temp\PDFPass1\PDFPass\bin\Release\itext.forms.xml"; DestDir: "{app}"; Flags: ignoreversion
Source: "C:\temp\PDFPass1\PDFPass\bin\Release\itext.io.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "C:\temp\PDFPass1\PDFPass\bin\Release\itext.io.xml"; DestDir: "{app}"; Flags: ignoreversion
Source: "C:\temp\PDFPass1\PDFPass\bin\Release\itext.kernel.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "C:\temp\PDFPass1\PDFPass\bin\Release\itext.kernel.xml"; DestDir: "{app}"; Flags: ignoreversion
Source: "C:\temp\PDFPass1\PDFPass\bin\Release\itext.layout.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "C:\temp\PDFPass1\PDFPass\bin\Release\itext.layout.xml"; DestDir: "{app}"; Flags: ignoreversion
Source: "C:\temp\PDFPass1\PDFPass\bin\Release\itext.pdfa.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "C:\temp\PDFPass1\PDFPass\bin\Release\itext.pdfa.xml"; DestDir: "{app}"; Flags: ignoreversion
Source: "C:\temp\PDFPass1\PDFPass\bin\Release\itext.sign.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "C:\temp\PDFPass1\PDFPass\bin\Release\itext.sign.xml"; DestDir: "{app}"; Flags: ignoreversion
Source: "C:\temp\PDFPass1\PDFPass\bin\Release\itext.styledxmlparser.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "C:\temp\PDFPass1\PDFPass\bin\Release\itext.styledxmlparser.xml"; DestDir: "{app}"; Flags: ignoreversion
Source: "C:\temp\PDFPass1\PDFPass\bin\Release\itext.svg.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "C:\temp\PDFPass1\PDFPass\bin\Release\itext.svg.xml"; DestDir: "{app}"; Flags: ignoreversion
Source: "C:\temp\PDFPass1\PDFPass\bin\Release\PDFPass.exe.config"; DestDir: "{app}"; Flags: ignoreversion
Source: "C:\temp\PDFPass1\PDFPass\bin\Release\PDFPass.pdb"; DestDir: "{app}"; Flags: ignoreversion
; NOTE: Don't use "Flags: ignoreversion" on any shared system files

[Icons]
Name: "{autoprograms}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"
Name: "{autodesktop}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"; Tasks: desktopicon

[Run]
Filename: "{tmp}\dotnet8.exe"; Parameters:"/q /norestart"; StatusMsg: "Installing Microsoft .NET framework 8..."; Check: IsDotNetMissing
Filename: "{app}\{#MyAppExeName}"; StatusMsg:"Starting PDFPass..."; Description: "{cm:LaunchProgram,{#StringChange(MyAppName, '&', '&&')}}"; Flags: nowait postinstall skipifsilent

[Code]
function InitializeSetup: Boolean;
begin    
  Dependency_AddDotNet80;     
  Dependency_AddDotNet80Desktop;   

  Result := True;
end;



function IsDotNet8Installed: Boolean;
var
  dotNetKey: string;
begin
  // Registry key for .NET 8.0 (adjust as needed)
  dotNetKey := 'Software\Microsoft\NET Framework Setup\NDP\v8.0.12345'; // Replace with actual version number

  // Check if the registry key exists
  Result := RegKeyExists(HKLM, dotNetKey);
end;

procedure CurStepChanged(CurStep: TSetupStep);
begin
  if CurStep = ssInstall then
  begin
    if not IsDotNet8Installed then
    begin
      // .NET 8.0 is not installed; handle accordingly
      MsgBox('Please install .NET 8.0 before proceeding.', mbInformation, MB_OK);
      // You can also launch the .NET 8.0 installer here
    end;
  end;
end;

procedure InstallDotNet8Runtime;
begin
  // Run the .NET 8.0 runtime installer silently
  Exec('dotnet-runtime-8.0.exe', '/quiet', '', SW_HIDE, ewWaitUntilTerminated, ResultCode);
end;

procedure CurStepChanged(CurStep: TSetupStep);
begin
  if CurStep = ssInstall then
  begin
    if not IsDotNet8Installed then
      InstallDotNet8Runtime;
  end;
end;